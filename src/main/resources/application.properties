spring.application.name=mapapp

# ===== PostgreSQL datasource =====
spring.datasource.url=jdbc:postgresql://localhost:5432/map
spring.datasource.username=postgres
spring.datasource.password=admin
spring.datasource.driver-class-name=org.postgresql.Driver

# ===== JPA / Hibernate settings =====
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.format_sql=true

# Ixtiyoriy loglar
logging.level.org.hibernate.SQL=warn
logging.level.org.flywaydb=info

# ===== Server port =====
server.port=8080

# ===== JWT konfiguratsiyasi =====
app.jwt.secret=E+8Uzq4a6jWZjrFQ6HCvymM7d0yPSO1Z+5s3iTlDcH2YgKbXQv1LFNwC7/Moh+6UGKm4/NBYQr8d7jJkVYtEXJw==
# Access token muddati (2 soat)
app.jwt.access-exp-minutes=120
# Refresh token muddati (1 kun, DEV uchun parametrik)
app.jwt.refresh-exp-seconds=86400

# ===== UA/IP binding (foydalanuvchi qurilma va IP) =====
app.security.refresh.ua-binding.enabled=true
# strict | lenient
app.security.refresh.ua-binding.mode=lenient
app.security.refresh.ip-binding.enabled=true

# ===== Rate-limit (IP bo?yicha) =====
# In-memory va Redis varianti ham shu parametrlarni ishlatadi
app.security.ratelimit.login.max-requests=10
app.security.ratelimit.login.window-seconds=60
app.security.ratelimit.refresh.max-requests=30
app.security.ratelimit.refresh.window-seconds=60

# ===== Distributed ratelimit =====
# 1) Umuman distributed yoqilsinmi?
app.security.ratelimit.distributed.enabled=true

# 2) Agar distributed bo?lsa qaysi backend?
#    true  -> Bucket4j (Redis ProxyManager)
#    false -> Oddiy Redis increment (oldingi varianti)
app.security.ratelimit.bucket4j.enabled=true

# ===== Redis ulanishlari =====
spring.data.redis.host=localhost
spring.data.redis.port=6379
# spring.data.redis.password=...

# ===== Swagger (faqat dev va test profilda) =====
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs

# === CORS ===
app.cors.enabled=true
app.cors.allowed-origins=http://localhost:5173
app.cors.allowed-methods=GET,POST,PATCH,DELETE,OPTIONS
# "*" desak X-Device-Id / Authorization va barchasi ruxsat
app.cors.allowed-headers=*
app.cors.exposed-headers=Authorization
app.cors.allow-credentials=false

# ===== JWT =====
# Access TTL daqiqada (mavjud bo?lishi kerak, tekshirib ol)
app.jwt.access-exp-minutes=120
# Refresh TTL sekundlarda (dev/prodga qarab sozla)
app.jwt.refresh-exp-seconds=86400
# Issuer
app.jwt.issuer=mapapp

# ===== Refresh siyosati =====
# true => har refreshda eski refresh token rotate/revoke qilinadi
# false => eski refresh token qayta ishlatiladi (rotation yo?q)
app.security.refresh.rotate=true

# ===== Binding switchlari =====
# Refreshni qaysi IP dan olgan bo?lsa, o?sha IP?dan kelgan so?rovgina qabul qilinadi
app.security.refresh.ip-binding.enabled=true

# User-Agent binding (strict|lenient)
app.security.refresh.ua-binding.enabled=false
app.security.refresh.ua-binding.mode=lenient

# ===== Single-device siyosati =====
# Faqat bitta qurilmaga ruxsat berish
app.security.sessions.single-device.enabled=true
# REVOKE_OLD => yangi kirishda eskilarni avtomatik bekor qiladi
# REJECT_NEW => aktiv sessiya bo?lsa, yangi login rad qilinadi
app.security.sessions.single-device.policy=REVOKE_OLD

# ===== (ixtiyoriy) Rate-limit / Bucket4j Redis =====
# app.security.ratelimit.bucket4j.enabled=true
# app.security.ratelimit.login.max-requests=10
# app.security.ratelimit.login.window-seconds=60
# app.security.ratelimit.refresh.max-requests=30
# app.security.ratelimit.refresh.window-seconds=60
